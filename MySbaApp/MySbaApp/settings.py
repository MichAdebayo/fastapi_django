"""
Django settings for MySbaApp project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

# Security
SECRET_KEY = os.getenv("SECRET_KEY", "default_secret_key")
DEBUG = os.getenv("DEBUG", "False").lower() == "true"

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "20.19.17.17, 0.0.0.0, 127.0.0.1, localhost").split(",") if os.getenv("ALLOWED_HOSTS") else []

# Installed Applications
INSTALLED_APPS = [
    'sbapp',  # Your custom app

    # Third-party apps
    'phonenumber_field',
    'tailwind',
    'theme',
    *(['django_browser_reload'] if DEBUG else []),

    # Default Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Only add browser reload middleware in debug mode
    *(['django_browser_reload.middleware.BrowserReloadMiddleware'] if DEBUG else []),
]


# Optional: enable compression and caching
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

if DEBUG:
    WHITENOISE_AUTOREFRESH = True

WHITENOISE_MANIFEST_STRICT = False # Make sure to set this to True in production

# URL Configuration
ROOT_URLCONF = 'MySbaApp.urls'

# Authentication URLs
LOGIN_URL = '/user/login/'


# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI Application
WSGI_APPLICATION = 'MySbaApp.wsgi.application'

# Database Configuration
MSSQL_CONFIG = {
    'ENGINE': os.getenv("MSSQL_ENGINE", "django.db.backends.sqlite3"),
    'NAME': os.getenv("MSSQL_NAME", BASE_DIR / "db.sqlite3"),
    'USER': os.getenv("MSSQL_USER", ""),
    'PASSWORD': os.getenv("MSSQL_PASSWORD", ""),
    'HOST': os.getenv("MSSQL_HOST", ""),
    'PORT': int(os.getenv("MSSQL_PORT", 1433)), 
    'OPTIONS': {
        'driver': 'ODBC Driver 18 for SQL Server',
        'Encrypt': 'yes',
        'TrustServerCertificate': 'yes',
        'Connection Timeout': 30,
    } if os.getenv("MSSQL_ENGINE") else {}
}

DATABASES = {
    'default': MSSQL_CONFIG
}

# Password Validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.ScryptPasswordHasher',
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_L10N = False
USE_I18N = True
USE_TZ = True
DATE_FORMAT = "d-M-y"

# Static and Media Files
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'sbapp/static',
                    BASE_DIR / 'sbapp/static/images',]

STATIC_ROOT = BASE_DIR / 'staticfiles'

# Authentication
AUTH_USER_MODEL = 'sbapp.UserProfile'

# Tailwind
TAILWIND_APP_NAME = 'theme'

# Internal IPs for debugging
INTERNAL_IPS = ["127.0.0.1"]

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {'class': 'logging.StreamHandler'},
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'sbapp.views': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}